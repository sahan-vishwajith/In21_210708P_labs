#include <iostream>
using namespace std;
  
// function to heapify the tree
// This function recursively transforms the array into a max heap
void heapify(int arr[], int n, int root)
{
    // Initialize the largest value to be the root
    int largest=root;
  
    // Find the indices of the left and right children
    int left  = (2*root) + 1;
    int right = (2*root) + 2;
  
    // If the left child is larger than the root, update the largest index
    if((left<n) && (arr[left]>arr[largest])){
        largest=left;
    }
  
    // If the right child is larger than the current largest, update it
    if((right<n) && (arr[right]>arr[largest])){
        largest=right;
    }
  
    // If the largest index isn't the root, swap the values and recursive call heapify on the new root
    if(root!=largest){
        int temp=arr[root];
        arr[root]=arr[largest];
        arr[largest]=temp;
        heapify(arr,n,largest);
    }
}
  
// Prints the contents of the array
void displayArray(int arr[], int n)
{
    for (int i=0; i<n; ++i)
        cout << arr[i] << " ";
    cout << "\n";
}

// Implements the Heap Sort algorithm
void heapSort(int arr[], int n)
{
   // Build the initial heap by calling heapify on each non-leaf node in the tree
   for(int i=n/2;i>=0;i--){
       heapify(arr,n,i);
   }
  
   // Display the array after building the heap
   displayArray(arr,n);
   
   // Extract elements from the heap one by one
   int temp;
   for(int indx=n-1;indx>=0;indx--){

       // Swap the root element with the last element in the heap and reduce the size of the heap
       temp=arr[0];
       arr[0]=arr[indx];
       arr[indx]=temp;
       n=n-1;
       
       // Call heapify on the new root to maintain the heap property
       heapify(arr,n,0);
   }
}
// main program
int main()
{

   int size;
   int element;
   cout<<"Input array size "<<endl;
   cin>>size;
   cout<<"Input array "<<endl;
   int *heap_arr=new int[size];
   for(int i=0;i<size;i++){
       cin>>element;
       heap_arr[i]=element;
   }

   int n = size;
   displayArray(heap_arr,n);
  
   heapSort(heap_arr, n);
  
   cout << "Sorted array"<<endl;
   displayArray(heap_arr, n);
}
